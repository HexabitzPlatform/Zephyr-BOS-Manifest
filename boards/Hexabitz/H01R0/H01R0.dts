/*
 * Copyright (c) 2025 Hexabitz
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <st/g0/stm32g0b1Xe.dtsi>
#include <st/g0/stm32g0b1c(b-c-e)uxn-pinctrl.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
	model = "Hexabitz RGB LED - H01R0 board";
	compatible = "Hexabitz,H01R0","st,stm32g0b1";
	// compatible = "st,stm32g0b1re-nucleo";

	chosen {
		zephyr,console = &usart2;
		zephyr,shell-uart = &usart2;
		zephyr,uart-mcumgr = &usart2;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
		zephyr,canbus = &fdcan1;
	};

	/* creates an alias that Zephyr can find with DT_ALIAS() */
	aliases {
		module-led = &indicator_led;
		volt-sensor0 = &vref;
		volt-sensor1 = &vbat;

		red-pwm-led = &red_pwm_led;
		green-pwm-led = &green_pwm_led;
		blue-pwm-led = &blue_pwm_led;
	};

	bos {
		compatible = "hexabitz,bos";
		modulePN = <1>;
		number-ports = <6>;

		status = "okay";
	};

	leds {
		compatible = "gpio-leds";

		/* creates a node label (that you can reference in aliases) */
		indicator_led: led0 {
			gpios = <&gpiob 14 GPIO_ACTIVE_HIGH>;
			label = "Indicator LD";
		};
	};

	/* pwmleds Node: This node defines the configuration for PWM-controlled LEDs. */
	pwmleds {
		compatible = "pwm-leds";
		status = "okay";

		/* Sub-Node: */
		red_pwm_led: red_led {
			/* &pwm2: References the pwm2 controller node.
			 * 1: The PWM channel number.
			 * PWM_MSEC(20): The period of the PWM signal in milliseconds (20 ms in this case).
			 * PWM_POLARITY_NORMAL: Indicates the polarity of the PWM signal. */
			pwms = <&pwm2 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
			status = "okay";
		};
		green_pwm_led: green_led {
			pwms = <&pwm4 2 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
			status = "okay";
		};
		blue_pwm_led: blue_led {
			pwms = <&pwm3 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
			status = "okay";
		};
	};
};

&clk_hsi {
	status = "okay";
};

&clk_hse {
	clock-frequency = <DT_FREQ_M(8)>;
	status = "okay";
};

&pll {
	div-m = <1>;
	mul-n = <16>;
	div-q = <2>;
	div-p = <2>;
	div-r = <2>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(64)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <1>;
};

&dma1 {
	status = "okay";
};

&dmamux1 {
	status = "okay";
};

&usart1 {
	pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pa10>;
	pinctrl-names = "default";
	current-speed = <115200>;
	dmas = <&dmamux1 0 50 (STM32_DMA_PERIPH_RX | STM32_DMA_MEM_8BITS | STM32_DMA_MODE_CYCLIC)>;
	dma-names = "rx";
	status = "okay";
};

&usart2 {
	pinctrl-0 = <&usart2_tx_pa2 &usart2_rx_pa3>;
	pinctrl-names = "default";
	current-speed = <115200>;
	dmas = <&dmamux1 1 52 (STM32_DMA_PERIPH_RX | STM32_DMA_MEM_8BITS | STM32_DMA_MODE_CYCLIC)>;
	dma-names = "rx";
	status = "okay";
};

&usart3 {
	pinctrl-0 = <&usart3_tx_pb10 &usart3_rx_pb11>;
	pinctrl-names = "default";
	current-speed = <115200>;
	dmas = <&dmamux1 2 54 (STM32_DMA_PERIPH_RX | STM32_DMA_MEM_8BITS | STM32_DMA_MODE_CYCLIC)>;
	dma-names = "rx";
	status = "okay";
};

&usart4 {
	pinctrl-0 = <&usart4_tx_pa0 &usart4_rx_pa1>;
	pinctrl-names = "default";
	current-speed = <115200>;
	dmas = <&dmamux1 3 56 (STM32_DMA_PERIPH_RX | STM32_DMA_MEM_8BITS | STM32_DMA_MODE_CYCLIC)>;
	dma-names = "rx";
	status = "okay";
};

&usart5 {
	pinctrl-0 = <&usart5_tx_pd3 &usart5_rx_pd2>;
	pinctrl-names = "default";
	current-speed = <115200>;
	dmas = <&dmamux1 4 74 (STM32_DMA_PERIPH_RX | STM32_DMA_MEM_8BITS | STM32_DMA_MODE_CYCLIC)>;
	dma-names = "rx";
	status = "okay";
};

&usart6 {
	pinctrl-0 = <&usart6_tx_pb8 &usart6_rx_pb9>;
	pinctrl-names = "default";
	current-speed = <115200>;
	dmas = <&dmamux1 5 76 (STM32_DMA_PERIPH_RX | STM32_DMA_MEM_8BITS | STM32_DMA_MODE_CYCLIC)>;
	dma-names = "rx";
	status = "okay";
};

&rtc {
	clocks = <&rcc STM32_CLOCK_BUS_APB1 0x00000400>,
	         <&rcc STM32_SRC_LSI RTC_SEL(2)>;
	status = "okay";
};

/*
&i2c1 {
	pinctrl-0 = <&i2c1_scl_pb8 &i2c1_sda_pb9>;
	pinctrl-names = "default";
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST>;
};

&i2c2 {
	pinctrl-0 = <&i2c2_scl_pa11 &i2c2_sda_pa12>;
	pinctrl-names = "default";
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST>;
};

&spi1 {
	pinctrl-0 = <&spi1_nss_pb0 &spi1_sck_pa5
	&spi1_miso_pa6 &spi1_mosi_pa7>;
	pinctrl-names = "default";
	status = "okay";
};

&spi2 {
	pinctrl-0 = <&spi2_nss_pd0 &spi2_sck_pd1
	&spi2_miso_pd3 &spi2_mosi_pd4>;
	pinctrl-names = "default";
	status = "okay";
};

&adc1 {
	pinctrl-0 = <&adc1_in0_pa0 &adc1_in1_pa1>;
	pinctrl-names = "default";
	st,adc-clock-source = "SYNC";
	st,adc-prescaler = <4>;
	status = "okay";
};

&die_temp {
	status = "okay";
};

&dac1 {
	status = "okay";
	pinctrl-0 = <&dac1_out1_pa4>;
	pinctrl-names = "default";
};

&fdcan1 {
	clocks = <&rcc STM32_CLOCK_BUS_APB1 0x00001000>,
	         <&rcc STM32_SRC_PLL_Q FDCAN_SEL(1)>;
	pinctrl-0 = <&fdcan1_rx_pa11 &fdcan1_tx_pa12>;
	pinctrl-names = "default";
	status = "okay";
};

&fdcan2 {
	clocks = <&rcc STM32_CLOCK_BUS_APB1 0x00001000>,
	         <&rcc STM32_SRC_PLL_Q FDCAN_SEL(1)>;
	pinctrl-0 = <&fdcan2_rx_pb0 &fdcan2_tx_pb1>;
	pinctrl-names = "default";
	status = "okay";
};
 */
&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 DT_SIZE_K(48)>;
			read-only;
		};

		slot0_partition: partition@C000 {
			label = "image-0";
			reg = <0x0000C000 DT_SIZE_K(200)>;
		};

		slot1_partition: partition@3E000 {
			label = "image-1";
			reg = <0x0003E000 DT_SIZE_K(200)>;
		};

		/* final 64KiB reserved for app storage partition */
		storage_partition: partition@70000 {
			label = "storage";
			reg = <0x00070000 DT_SIZE_K(64)>;
		};
	};
};

stm32_lp_tick_source: &lptim1 {
	clocks = <&rcc STM32_CLOCK_BUS_APB1 0x80000000>,
	         <&rcc STM32_SRC_LSI LPTIM1_SEL(1)>;
	status = "okay";
};

&vref {
	status = "okay";
};

&vbat {
	status = "okay";
};

/*************************************************************/
/****************** RGB Module Special nodes *****************/
/*************************************************************/
/*
Timer for RGB red - PA15    ------> TIM2_CH1
Timer for RGB blue - PA6    ------> TIM3_CH1
Timer for RGB green - PB7   ------> TIM4_CH2
 */
&timers2 {
	st,prescaler = <10000>;
	status = "okay";
	pwm2: pwm {
		status = "okay";
		pinctrl-0 = <&tim2_ch1_pa15>;
		pinctrl-names = "default";
	};
};

&timers3 {
	st,prescaler = <10000>;
	status = "okay";
	pwm3: pwm {
		status = "okay";
		pinctrl-0 = <&tim3_ch1_pa6>;
		pinctrl-names = "default";
	};
};

&timers4 {
	st,prescaler = <10000>;
	status = "okay";
	pwm4: pwm {
		status = "okay";
		pinctrl-0 = <&tim4_ch2_pb7>;
		pinctrl-names = "default";
	};
};