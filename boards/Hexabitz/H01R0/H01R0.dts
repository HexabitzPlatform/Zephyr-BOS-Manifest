
 /dts-v1/;
 #include <st/g0/stm32g0b1Xe.dtsi>
 #include <st/g0/stm32g0b1r(b-c-e)tx-pinctrl.dtsi>
 #include <zephyr/dt-bindings/input/input-event-codes.h>
 
 / {
	 model = "Hexabitz - RGB Module - H01R0x (STM32G0B1CEU6N) ";
	 compatible = "st,stm32g0b1re-nucleo";
 
	 /* The (chosen) node in a Zephyr Device Tree Source (DTS) file is used to specify important 
	  * hardware peripherals and resources that the Zephyr OS or application will use.
	  * zephyr,console: The console where Zephyr sends log messages, debugging output.
	  * zephyr,shell-uart: The shell is an interactive command-line interface that allows you to
	  * send commands to the device during runtime.
	  * zephyr,uart-mcumgr: MCUmgr is a management protocol for firmware updates, configuration,
	  * and remote commands over a UART interface.
	  * zephyr,sram: where Zephyr will allocate its heap, stack, and other runtime data structures.
	  * zephyr,flash: where Zephyr stores its code, data, and other persistent information.
	  * zephyr,code-partition: refers to the primary firmware slot for Zephyr applications , This is
	  * especially relevant in bootloader scenarios (e.g., with MCUboot), where multiple partitions
	  * might exist for firmware management.
	   */
	 chosen {
		 zephyr,console = &usart2;
		 zephyr,shell-uart = &usart2;
		 zephyr,uart-mcumgr = &usart2;
		 zephyr,sram = &sram0;
		 zephyr,flash = &flash0;
		 zephyr,code-partition = &slot0_partition;
	 };
 
	 /* leds is a node in the device tree that describes a collection of LEDs connected to the device.
	  * The compatible = "gpio-leds"; property tells Zephyr that this node contains LEDs controlled via GPIO pins.
	  * gpios = <&gpiob 14 GPIO_ACTIVE_HIGH>; :
	  * &gpiob: Refers to the GPIOB controller, defined elsewhere in the device tree (.dtsi file).
	  * 14: The pin number on the GPIOB port (pin PB14).
	  * GPIO_ACTIVE_HIGH: Defines the polarity of the signal to turn the LED on.
	  *  */
	 leds: leds {
		 compatible = "gpio-leds";
		 green_led_1: led_4 {
			 gpios = <&gpiob 14 GPIO_ACTIVE_HIGH>;
			 label = "User LD4";
		 };
	 };
 
	/* pwmleds Node: This node defines the configuration for PWM-controlled LEDs. */
	pwmleds {
		compatible = "pwm-leds";
		status = "okay";

		/* Sub-Node: */
		red_pwm_led: red_pwm_led {
			/* &pwm2: References the pwm3 controller node.
			 * 1: The PWM channel number.
			 * PWM_MSEC(20): The period of the PWM signal in milliseconds (20 ms in this case).
			 * PWM_POLARITY_NORMAL: Indicates the polarity of the PWM signal. */
			pwms = <&pwm2 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		green_pwm_led: green_pwm_led {
			pwms = <&pwm4 2 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
		blue_pwm_led: blue_pwm_led {
			pwms = <&pwm3 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		};
	};

	 aliases {
		 led0 = &green_led_1;
		 watchdog0 = &iwdg;
		 die-temp0 = &die_temp;
		 volt-sensor0 = &vref;
		 volt-sensor1 = &vbat;
		 red-pwm-led = &red_pwm_led;
		 green-pwm-led = &green_pwm_led;
		 blue-pwm-led = &blue_pwm_led;
	 };
 };
 
 &clk_lsi {
	 status = "okay";
 };
 
 &clk_hsi {
	 status = "okay";
 };
   
 &clk_hsi48 {
	 status = "okay";
	 crs-usb-sof;
 };
 /*
&clk_hse {
	clock-frequency = <DT_FREQ_M(8)>;
	status = "okay";
};
*/

 &pll {
	 div-m = <1>;
	 mul-n = <8>;
	 div-p = <2>;
	 div-q = <2>;
	 div-r = <2>;
	 clocks = <&clk_hsi>;
	 status = "okay";
 };
 
 &rcc {
	 clocks = <&pll>;
	 clock-frequency = <DT_FREQ_M(64)>;
	 ahb-prescaler = <1>;
	 apb1-prescaler = <1>;
 };
 
 &usart1 {
	 pinctrl-0 = <&usart1_tx_pc4 &usart1_rx_pc5>;
	 pinctrl-names = "default";
	 current-speed = <115200>;
	 status = "okay";
 };
 
 &usart2 {
	 pinctrl-0 = <&usart2_tx_pa2 &usart2_rx_pa3>;
	 pinctrl-names = "default";
	 current-speed = <115200>;
	 status = "okay";
 };
 
&usart3 {
	pinctrl-0 = <&usart3_tx_pb10 &usart3_rx_pb11>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

&usart4 {
	pinctrl-0 = <&usart4_tx_pa0 &usart4_rx_pa1>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

&usart5 {
	pinctrl-0 = <&usart5_tx_pd3 &usart5_rx_pd2>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

&usart6 {
	pinctrl-0 = <&usart6_tx_pb8 &usart6_rx_pb9>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

 &iwdg {
	 status = "okay";
 };
 
 &adc1 {
	 pinctrl-0 = <&adc1_in0_pa0 &adc1_in1_pa1>;
	 pinctrl-names = "default";
	 st,adc-clock-source = <SYNC>;
	 st,adc-prescaler = <4>;
	 status = "okay";
 };
 
 &die_temp {
	 status = "okay";
 };
 
 &flash0 {
	 partitions {
		 compatible = "fixed-partitions";
		 #address-cells = <1>;
		 #size-cells = <1>;
 
		 boot_partition: partition@0 {
			 label = "mcuboot";
			 reg = <0x00000000 DT_SIZE_K(48)>;
			 read-only;
		 };
		 slot0_partition: partition@C000 {
			 label = "image-0";
			 reg = <0x0000C000 DT_SIZE_K(200)>;
		 };
		 slot1_partition: partition@3E000 {
			 label = "image-1";
			 reg = <0x0003E000 DT_SIZE_K(200)>;
		 };
		 /* final 64KiB reserved for app storage partition */
		 storage_partition: partition@70000 {
			 label = "storage";
			 reg = <0x00070000 DT_SIZE_K(64)>;
		 };
	 };
 };
 
 stm32_lp_tick_source: &lptim1 {
	 clocks = <&rcc STM32_CLOCK_BUS_APB1 0x80000000>,
		  <&rcc STM32_SRC_LSI LPTIM1_SEL(1)>;
	 status = "okay";
 };
 
 &vref {
	 status = "okay";
 };
 
 &vbat {
	 status = "okay";
 };
 
/*************************************************************/
/****************** RGB Module Special nodes *****************/
/*************************************************************/
/*
 Timer for RGB red - PA15    ------> TIM2_CH1
 Timer for RGB blue - PA6    ------> TIM3_CH1
 Timer for RGB green - PB7   ------> TIM4_CH2
 */
 &timers2 {
	st,prescaler = <10000>;
	status = "okay";
	pwm2: pwm {
		status = "okay";
		pinctrl-0 = <&tim2_ch1_pa15>;
		pinctrl-names = "default";
	};
};

&timers3 {
	st,prescaler = <10000>;
	status = "okay";
	pwm3: pwm {
		status = "okay";
		pinctrl-0 = <&tim3_ch1_pa6>;
		pinctrl-names = "default";
	};
};

&timers4 {
	st,prescaler = <10000>;
	status = "okay";
	pwm4: pwm {
		status = "okay";
		pinctrl-0 = <&tim4_ch2_pb7>;
		pinctrl-names = "default";
	};
};